{"version":3,"file":"static/js/711.344de138.chunk.js","mappings":"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","sources":["components/movie/movieDetail/MovieCredits/MovieCredits.js","components/movie/movieDetail/movieVideo/MovieVideo.js","components/movie/movieDetail/movieSimilar/MovieSimilar.js","components/movie/movieDetail/MovieCredits/MovieCreditsSekeleton.js","components/movie/movieDetail/movieVideo/MovieVideoSkeleton.js","components/movie/movieDetail/MovieMeta.js","pages/movieDetailPage/MovieDetailPageSkeleton.js","pages/movieDetailPage/MovieDetailPage.js"],"sourcesContent":["import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withErrorBoundary } from \"react-error-boundary\";\r\n\r\nimport { tmdbAPI } from \"~/config\";\r\nimport FallbackComponent from \"~/components/error/FallbackComponent\";\r\n\r\nconst MovieCredits = ({ cast }) => {\r\n    return (\r\n        <Fragment>\r\n            <h2 className=\"mb-10 text-3xl text-center\">Casts</h2>\r\n            <div className=\"grid grid-cols-4 gap-5\">\r\n                {cast.slice(0, 4).map((item) => (\r\n                    <div key={item.id} className=\"cast-item\">\r\n                        <img\r\n                            key={item.id}\r\n                            src={tmdbAPI.imageOriginal(item.profile_path)}\r\n                            alt=\"\"\r\n                            className=\"w-full h-[350px] object-cover rounded-lg mb-3\"\r\n                        />\r\n                        <h3 className=\"text-xl font-medium text-center\">\r\n                            {item.name}\r\n                        </h3>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nMovieCredits.propTypes = {\r\n    cast: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default withErrorBoundary(MovieCredits, {\r\n    FallbackComponent,\r\n});\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withErrorBoundary } from \"react-error-boundary\";\r\n\r\nimport FallbackComponent from \"~/components/error/FallbackComponent\";\r\n\r\nconst MovieVideo = ({ results }) => {\r\n    return (\r\n        <div className=\"py-10\">\r\n            <h2 className=\"mb-10 text-3xl text-center\">Trailers</h2>\r\n            <div className=\"flex flex-col gap-10\">\r\n                {results.slice(0, 2).map((item) => (\r\n                    <div className=\"\" key={item.id}>\r\n                        <h3 className=\"inline-block p-2 mb-5 text-xl font-medium bg-secondary\">\r\n                            {item.name}\r\n                        </h3>\r\n                        <div key={item.id} className=\"w-full aspect-video\">\r\n                            <iframe\r\n                                width=\"967\"\r\n                                height=\"544\"\r\n                                src={`https://www.youtube.com/embed/${item.key}`}\r\n                                title=\"Một Chút EDM Mix Chill ♫ Top 20 Bản EDM Điện Tử Gaming Music Hay Nhất Cho Ngày Dài Mệt Mỏi Gây Ghiện\"\r\n                                frameBorder=\"0\"\r\n                                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                                allowFullScreen\r\n                                className=\"object-fill w-full h-full\"\r\n                            ></iframe>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nMovieVideo.propTypes = {\r\n    results: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default withErrorBoundary(MovieVideo, { FallbackComponent });\r\n","import React from \"react\";\r\nimport { SwiperSlide, Swiper } from \"swiper/react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport FallbackComponent from \"~/components/error/FallbackComponent\";\r\n\r\nimport MovieCard from \"../../movieCard/MovieCard\";\r\nimport { withErrorBoundary } from \"react-error-boundary\";\r\nconst MovieSimilar = ({ results }) => {\r\n    return (\r\n        <div className=\"py-10\">\r\n            <h2 className=\"mb-10 text-3xl font-medium text-center\">\r\n                Similar movies\r\n            </h2>\r\n            <div className=\"movie-list\">\r\n                <Swiper\r\n                    grabCursor={\"true\"}\r\n                    spaceBetween={27}\r\n                    slidesPerView={\"auto\"}\r\n                >\r\n                    {results.length > 0 &&\r\n                        results.map((item) => (\r\n                            <SwiperSlide key={item.id}>\r\n                                <MovieCard item={item}></MovieCard>\r\n                            </SwiperSlide>\r\n                        ))}\r\n                </Swiper>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nMovieSimilar.propTypes = {\r\n    results: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default withErrorBoundary(MovieSimilar, { FallbackComponent });\r\n","import React, { Fragment } from \"react\";\r\nimport LoadingSkeleton from \"~/components/loading/LoadingSkeleton\";\r\n\r\nconst MovieCreditsSekeleton = () => {\r\n    return (\r\n        <Fragment>\r\n            <h2 className=\"mb-10 text-3xl text-center\">Casts loading</h2>\r\n            <div className=\"grid grid-cols-4 gap-5\">\r\n                <div className=\"cast-item\">\r\n                    <LoadingSkeleton\r\n                        className=\"mb-5\"\r\n                        width=\"100%\"\r\n                        height=\"250px\"\r\n                        radius=\"8px\"\r\n                    ></LoadingSkeleton>\r\n                    <LoadingSkeleton\r\n                        className=\"mx-auto\"\r\n                        width=\"100px\"\r\n                        height=\"30px\"\r\n                    ></LoadingSkeleton>\r\n                </div>\r\n                <div className=\"cast-item\">\r\n                    <LoadingSkeleton\r\n                        className=\"mb-5\"\r\n                        width=\"100%\"\r\n                        height=\"250px\"\r\n                        radius=\"8px\"\r\n                    ></LoadingSkeleton>\r\n                    <LoadingSkeleton\r\n                        className=\"mx-auto\"\r\n                        width=\"100px\"\r\n                        height=\"30px\"\r\n                    ></LoadingSkeleton>\r\n                </div>\r\n                <div className=\"cast-item\">\r\n                    <LoadingSkeleton\r\n                        className=\"mb-5\"\r\n                        width=\"100%\"\r\n                        height=\"250px\"\r\n                        radius=\"8px\"\r\n                    ></LoadingSkeleton>\r\n                    <LoadingSkeleton\r\n                        className=\"mx-auto\"\r\n                        width=\"100px\"\r\n                        height=\"30px\"\r\n                    ></LoadingSkeleton>\r\n                </div>\r\n                <div className=\"cast-item\">\r\n                    <LoadingSkeleton\r\n                        className=\"mb-5\"\r\n                        width=\"100%\"\r\n                        height=\"250px\"\r\n                        radius=\"8px\"\r\n                    ></LoadingSkeleton>\r\n                    <LoadingSkeleton\r\n                        className=\"mx-auto\"\r\n                        width=\"100px\"\r\n                        height=\"30px\"\r\n                    ></LoadingSkeleton>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default MovieCreditsSekeleton;\r\n","import React from \"react\";\r\n\r\nimport LoadingSkeleton from \"~/components/loading/LoadingSkeleton\";\r\n\r\nconst MovieVideoSkeleton = () => {\r\n    return (\r\n        <div className=\"py-10\">\r\n            <h2 className=\"mb-10 text-3xl text-center\">Trailers</h2>\r\n            <div className=\"flex flex-col gap-10\">\r\n                <div>\r\n                    <LoadingSkeleton\r\n                        className=\"inline-block p-2 mb-5 text-xl font-medium bg-secondary\"\r\n                        width=\"300px\"\r\n                        height=\"50px\"\r\n                    ></LoadingSkeleton>\r\n                    <div className=\"w-full aspect-video\">\r\n                        <LoadingSkeleton\r\n                            width=\"967\"\r\n                            height=\"544\"\r\n                            className=\"object-fill w-full h-full\"\r\n                        ></LoadingSkeleton>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MovieVideoSkeleton;\r\n","import { useParams } from \"react-router-dom\";\r\nimport useSWR from \"swr\";\r\nimport { withErrorBoundary } from \"react-error-boundary\";\r\nimport PropTypes from \"prop-types\";\r\nimport { SwiperSlide, Swiper } from \"swiper/react\";\r\n\r\nimport { fetcher, tmdbAPI } from \"~/config\";\r\nimport MovieCredits from \"~/components/movie/movieDetail/MovieCredits/MovieCredits\";\r\nimport MovieVideo from \"./movieVideo/MovieVideo\";\r\nimport MovieSimilar from \"./movieSimilar/MovieSimilar\";\r\nimport FallbackComponent from \"~/components/error/FallbackComponent\";\r\nimport MovieCreditsSekeleton from \"./MovieCredits/MovieCreditsSekeleton\";\r\nimport MovieVideoSkeleton from \"./movieVideo/MovieVideoSkeleton\";\r\nimport MovieCardSkeleton from \"~/components/movie/movieCard/MovieCardSkeleton\";\r\n\r\nconst MovieMeta = ({ type = \"videos\" }) => {\r\n    const { movieId } = useParams();\r\n    const { data, error } = useSWR(\r\n        tmdbAPI.getMovieMeta(movieId, type),\r\n        fetcher\r\n    );\r\n    const isLoading = !data && !error;\r\n    if (!data) return null;\r\n\r\n    if (type === \"credits\") {\r\n        const { cast } = data;\r\n        if (!cast || cast.length <= 0) return null;\r\n        return isLoading ? (\r\n            <MovieCreditsSekeleton></MovieCreditsSekeleton>\r\n        ) : (\r\n            <MovieCredits cast={cast}></MovieCredits>\r\n        );\r\n    } else {\r\n        const { results } = data;\r\n        if (!results || results.length <= 0) return null;\r\n        switch (type) {\r\n            case \"videos\":\r\n                return isLoading ? (\r\n                    <MovieVideoSkeleton></MovieVideoSkeleton>\r\n                ) : (\r\n                    <MovieVideo results={results}></MovieVideo>\r\n                );\r\n\r\n            case \"similar\":\r\n                return isLoading ? (\r\n                    <div className=\"mb-10 movie-list\">\r\n                        <Swiper\r\n                            grabCursor={\"true\"}\r\n                            spaceBetween={27}\r\n                            slidesPerView={\"auto\"}\r\n                        >\r\n                            <SwiperSlide>\r\n                                <MovieCardSkeleton></MovieCardSkeleton>\r\n                            </SwiperSlide>\r\n                            <SwiperSlide>\r\n                                <MovieCardSkeleton></MovieCardSkeleton>\r\n                            </SwiperSlide>\r\n                            <SwiperSlide>\r\n                                <MovieCardSkeleton></MovieCardSkeleton>\r\n                            </SwiperSlide>\r\n                            <SwiperSlide>\r\n                                <MovieCardSkeleton></MovieCardSkeleton>\r\n                            </SwiperSlide>\r\n                            <SwiperSlide>\r\n                                <MovieCardSkeleton></MovieCardSkeleton>\r\n                            </SwiperSlide>\r\n                        </Swiper>\r\n                    </div>\r\n                ) : (\r\n                    <MovieSimilar results={results}></MovieSimilar>\r\n                );\r\n            default:\r\n                break;\r\n        }\r\n        return null;\r\n    }\r\n};\r\n\r\nMovieMeta.propTypes = {\r\n    type: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default withErrorBoundary(MovieMeta, {\r\n    FallbackComponent,\r\n});\r\n","import React, { Fragment } from \"react\";\r\nimport LoadingSkeleton from \"~/components/loading/LoadingSkeleton\";\r\nimport MovieMeta from \"~/components/movie/movieDetail/MovieMeta\";\r\n\r\nconst MovieDetailPageSkeleton = () => {\r\n    return (\r\n        <Fragment>\r\n            <div className=\"w-full h-[600px] relative\">\r\n                <div className=\"absolute inset-0 bg-black bg-opacity-25\"></div>\r\n                <LoadingSkeleton className=\"w-full h-full bg-no-repeat bg-cover\"></LoadingSkeleton>\r\n            </div>\r\n            <div className=\"w-full h-[300px] max-w-[800px] mx-auto -mt-[200px] relative z-10\">\r\n                <LoadingSkeleton className=\"object-cover w-full h-full rounded-xl\"></LoadingSkeleton>\r\n            </div>\r\n\r\n            <LoadingSkeleton\r\n                className=\"mx-auto mt-10 mb-10 text-4xl font-bold text-center text-white\"\r\n                width=\"150px\"\r\n                height=\"30px\"\r\n            ></LoadingSkeleton>\r\n            <div className=\"flex items-center justify-center mb-10 gap-x-5\">\r\n                <LoadingSkeleton\r\n                    width=\"120px\"\r\n                    height=\"50px\"\r\n                    className=\"px-4 py-2 border rounded-sm border-primary text-primary\"\r\n                ></LoadingSkeleton>\r\n                <LoadingSkeleton\r\n                    width=\"120px\"\r\n                    height=\"50px\"\r\n                    className=\"px-4 py-2 border rounded-sm border-primary text-primary\"\r\n                ></LoadingSkeleton>\r\n                <LoadingSkeleton\r\n                    width=\"120px\"\r\n                    height=\"50px\"\r\n                    className=\"px-4 py-2 border rounded-sm border-primary text-primary\"\r\n                ></LoadingSkeleton>\r\n            </div>\r\n\r\n            <LoadingSkeleton className=\"mb-10 text-center leading-relaxed max-w-[600px] mx-auto\"></LoadingSkeleton>\r\n            <MovieMeta type=\"credits\"></MovieMeta>\r\n            <MovieMeta type=\"videos\"></MovieMeta>\r\n            <MovieMeta type=\"similar\"></MovieMeta>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default MovieDetailPageSkeleton;\r\n","import React, { Fragment } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport useSWR from \"swr\";\r\n\r\nimport { fetcher, tmdbAPI } from \"~/config\";\r\nimport MovieMeta from \"../../components/movie/movieDetail/MovieMeta\";\r\nimport MovieDetailPageSkeleton from \"./MovieDetailPageSkeleton\";\r\nconst MovieDetailPage = () => {\r\n    // useParams: get id trên thanh trình duyệt, return movieId\r\n    const { movieId } = useParams();\r\n    const { data, error } = useSWR(tmdbAPI.getMovieDetails(movieId), fetcher);\r\n    const isLoading = !data && !error;\r\n\r\n    if (!data) return;\r\n    const { backdrop_path, poster_path, title, genres, overview } = data;\r\n\r\n    return (\r\n        <>\r\n            {isLoading ? (\r\n                <MovieDetailPageSkeleton></MovieDetailPageSkeleton>\r\n            ) : (\r\n                <Fragment>\r\n                    <div className=\"w-full h-[600px] relative\">\r\n                        <div className=\"absolute inset-0 bg-black bg-opacity-25\"></div>\r\n                        <div\r\n                            className=\"w-full h-full bg-no-repeat bg-cover\"\r\n                            style={{\r\n                                backgroundImage: `url(${tmdbAPI.imageOriginal(\r\n                                    backdrop_path\r\n                                )})`,\r\n                            }}\r\n                        ></div>\r\n                    </div>\r\n                    <div className=\"w-full h-[300px] max-w-[800px] mx-auto -mt-[200px] relative z-10\">\r\n                        <img\r\n                            src={tmdbAPI.imageOriginal(poster_path)}\r\n                            alt=\"\"\r\n                            className=\"object-cover w-full h-full rounded-xl\"\r\n                        />\r\n                    </div>\r\n                    <h1 className=\"mt-10 mb-10 text-4xl font-bold text-center text-white\">\r\n                        {title}\r\n                    </h1>\r\n                    {genres.length > 0 && (\r\n                        <div className=\"flex items-center justify-center mb-10 gap-x-5\">\r\n                            {genres.map((item) => (\r\n                                <span\r\n                                    className=\"px-4 py-2 border rounded-sm border-primary text-primary\"\r\n                                    key={item.id}\r\n                                >\r\n                                    {item.name}\r\n                                </span>\r\n                            ))}\r\n                        </div>\r\n                    )}\r\n\r\n                    <p className=\"mb-10 text-center leading-relaxed max-w-[600px] mx-auto\">\r\n                        {overview}\r\n                    </p>\r\n                    <MovieMeta type=\"credits\"></MovieMeta>\r\n                    <MovieMeta type=\"videos\"></MovieMeta>\r\n                    <MovieMeta type=\"similar\"></MovieMeta>\r\n                </Fragment>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default MovieDetailPage;\r\n"],"names":["withErrorBoundary","cast","Fragment","className","slice","map","item","src","tmdbAPI","profile_path","alt","id","name","FallbackComponent","results","width","height","key","title","frameBorder","allow","allowFullScreen","grabCursor","spaceBetween","slidesPerView","length","MovieCard","LoadingSkeleton","radius","type","movieId","useParams","useSWR","fetcher","data","error","isLoading","MovieCardSkeleton","backdrop_path","poster_path","genres","overview","style","backgroundImage"],"sourceRoot":""}